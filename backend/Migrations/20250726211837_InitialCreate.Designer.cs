// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using WeddingDressCMS.API.Data;

#nullable disable

namespace WeddingDressCMS.API.Migrations
{
    [DbContext(typeof(WeddingDressContext))]
    [Migration("20250726211837_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("WeddingDressCMS.API.Models.Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Categories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2025, 7, 26, 21, 18, 35, 942, DateTimeKind.Utc).AddTicks(5291),
                            Description = "Classic A-line wedding dresses",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "A-Line",
                            SortOrder = 1
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2025, 7, 26, 21, 18, 35, 942, DateTimeKind.Utc).AddTicks(5299),
                            Description = "Elegant mermaid style dresses",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Mermaid",
                            SortOrder = 2
                        },
                        new
                        {
                            Id = 3,
                            CreatedAt = new DateTime(2025, 7, 26, 21, 18, 35, 942, DateTimeKind.Utc).AddTicks(5300),
                            Description = "Traditional ball gown wedding dresses",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Ball Gown",
                            SortOrder = 3
                        },
                        new
                        {
                            Id = 4,
                            CreatedAt = new DateTime(2025, 7, 26, 21, 18, 35, 942, DateTimeKind.Utc).AddTicks(5301),
                            Description = "Modern sheath wedding dresses",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Sheath",
                            SortOrder = 4
                        },
                        new
                        {
                            Id = 5,
                            CreatedAt = new DateTime(2025, 7, 26, 21, 18, 35, 942, DateTimeKind.Utc).AddTicks(5302),
                            Description = "Boho and free-spirited wedding dresses",
                            ImageUrl = "",
                            IsActive = true,
                            Name = "Bohemian",
                            SortOrder = 5
                        });
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.DressImage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("AltText")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<bool>("IsPrimary")
                        .HasColumnType("bit");

                    b.Property<int>("SortOrder")
                        .HasColumnType("int");

                    b.Property<int>("WeddingDressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeddingDressId");

                    b.ToTable("DressImages");
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.DressSize", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<int>("WeddingDressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("WeddingDressId");

                    b.ToTable("DressSizes");
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("BillingAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<string>("CustomerEmail")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<string>("CustomerPhone")
                        .IsRequired()
                        .HasMaxLength(20)
                        .HasColumnType("nvarchar(20)");

                    b.Property<DateTime?>("DeliveredDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Notes")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<DateTime>("OrderDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("OrderNumber")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("PaymentStatus")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime?>("ShippedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("ShippingAddress")
                        .IsRequired()
                        .HasMaxLength(500)
                        .HasColumnType("nvarchar(500)");

                    b.Property<decimal>("ShippingCost")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Status")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("SubTotal")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Tax")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("Total")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.HasKey("Id");

                    b.HasIndex("OrderNumber")
                        .IsUnique();

                    b.ToTable("Orders");
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.OrderItem", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<string>("Size")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nvarchar(10)");

                    b.Property<string>("SpecialInstructions")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<decimal>("TotalPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<decimal>("UnitPrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<int>("WeddingDressId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.HasIndex("WeddingDressId");

                    b.ToTable("OrderItems");
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.WeddingDress", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CategoryId")
                        .HasColumnType("int");

                    b.Property<string>("Color")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("nvarchar(1000)");

                    b.Property<string>("Designer")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Fabric")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsAvailable")
                        .HasColumnType("bit");

                    b.Property<bool>("IsFeatured")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(200)
                        .HasColumnType("nvarchar(200)");

                    b.Property<string>("Neckline")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal>("Price")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("SKU")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<decimal?>("SalePrice")
                        .HasPrecision(18, 2)
                        .HasColumnType("decimal(18,2)");

                    b.Property<string>("Silhouette")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("SleeveStyle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Stock")
                        .HasColumnType("int");

                    b.Property<string>("Style")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("TrainStyle")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("UpdatedAt")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.HasIndex("SKU")
                        .IsUnique();

                    b.ToTable("WeddingDresses");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            Color = "Ivory",
                            CreatedAt = new DateTime(2025, 7, 26, 21, 18, 35, 942, DateTimeKind.Utc).AddTicks(5506),
                            Description = "A stunning A-line dress with intricate lace details and a flowing train.",
                            Designer = "Elegance Bridal",
                            Fabric = "Lace, Tulle",
                            IsAvailable = true,
                            IsFeatured = true,
                            Name = "Enchanted Dreams A-Line",
                            Neckline = "V-Neck",
                            Price = 1299.99m,
                            SKU = "WD001",
                            Silhouette = "A-Line",
                            SleeveStyle = "Long Sleeves",
                            Stock = 5,
                            Style = "Classic",
                            TrainStyle = "Chapel Train",
                            UpdatedAt = new DateTime(2025, 7, 26, 21, 18, 35, 942, DateTimeKind.Utc).AddTicks(5506)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            Color = "White",
                            CreatedAt = new DateTime(2025, 7, 26, 21, 18, 35, 942, DateTimeKind.Utc).AddTicks(5521),
                            Description = "A sophisticated mermaid dress that hugs your curves perfectly.",
                            Designer = "Royal Couture",
                            Fabric = "Satin, Lace",
                            IsAvailable = true,
                            IsFeatured = true,
                            Name = "Royal Elegance Mermaid",
                            Neckline = "Sweetheart",
                            Price = 1899.99m,
                            SKU = "WD002",
                            Silhouette = "Mermaid",
                            SleeveStyle = "Strapless",
                            Stock = 3,
                            Style = "Modern",
                            TrainStyle = "Court Train",
                            UpdatedAt = new DateTime(2025, 7, 26, 21, 18, 35, 942, DateTimeKind.Utc).AddTicks(5521)
                        });
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.DressImage", b =>
                {
                    b.HasOne("WeddingDressCMS.API.Models.WeddingDress", "WeddingDress")
                        .WithMany("Images")
                        .HasForeignKey("WeddingDressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeddingDress");
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.DressSize", b =>
                {
                    b.HasOne("WeddingDressCMS.API.Models.WeddingDress", "WeddingDress")
                        .WithMany("Sizes")
                        .HasForeignKey("WeddingDressId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WeddingDress");
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.OrderItem", b =>
                {
                    b.HasOne("WeddingDressCMS.API.Models.Order", "Order")
                        .WithMany("OrderItems")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("WeddingDressCMS.API.Models.WeddingDress", "WeddingDress")
                        .WithMany("OrderItems")
                        .HasForeignKey("WeddingDressId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Order");

                    b.Navigation("WeddingDress");
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.WeddingDress", b =>
                {
                    b.HasOne("WeddingDressCMS.API.Models.Category", "Category")
                        .WithMany("WeddingDresses")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.Category", b =>
                {
                    b.Navigation("WeddingDresses");
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.Order", b =>
                {
                    b.Navigation("OrderItems");
                });

            modelBuilder.Entity("WeddingDressCMS.API.Models.WeddingDress", b =>
                {
                    b.Navigation("Images");

                    b.Navigation("OrderItems");

                    b.Navigation("Sizes");
                });
#pragma warning restore 612, 618
        }
    }
}
