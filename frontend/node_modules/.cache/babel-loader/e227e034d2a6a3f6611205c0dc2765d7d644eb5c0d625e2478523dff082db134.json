{"ast":null,"code":"import axios from 'axios';\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\nconst api = axios.create({\n  baseURL: API_BASE_URL,\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n\n// Request interceptor for logging\napi.interceptors.request.use(config => {\n  var _config$method;\n  console.log(`API Request: ${(_config$method = config.method) === null || _config$method === void 0 ? void 0 : _config$method.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Response interceptor for error handling\napi.interceptors.response.use(response => {\n  return response;\n}, error => {\n  var _error$response, _error$response2;\n  console.error('API Error:', ((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.data) || error.message);\n\n  // Handle authentication errors\n  if (((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : _error$response2.status) === 401) {\n    // Remove token and redirect to login\n    localStorage.removeItem('token');\n    localStorage.removeItem('user');\n    window.location.href = '/login';\n  }\n  return Promise.reject(error);\n});\n\n// Request interceptor to add auth token\napi.interceptors.request.use(config => {\n  var _config$method2;\n  const token = localStorage.getItem('token');\n  if (token) {\n    config.headers.Authorization = `Bearer ${token}`;\n  }\n  console.log(`API Request: ${(_config$method2 = config.method) === null || _config$method2 === void 0 ? void 0 : _config$method2.toUpperCase()} ${config.url}`);\n  return config;\n}, error => {\n  return Promise.reject(error);\n});\n\n// Wedding Dresses API\nexport const dressesApi = {\n  getAll: (search, categoryId) => {\n    const params = new URLSearchParams();\n    if (search) params.append('search', search);\n    if (categoryId) params.append('categoryId', categoryId.toString());\n    return api.get(`/dresses?${params.toString()}`);\n  },\n  getById: id => api.get(`/dresses/${id}`),\n  getFeatured: () => api.get('/dresses/featured'),\n  create: dress => api.post('/dresses', dress),\n  update: (id, dress) => api.put(`/dresses/${id}`, dress),\n  delete: id => api.delete(`/dresses/${id}`)\n};\n\n// Categories API\nexport const categoriesApi = {\n  getAll: () => api.get('/categories'),\n  getById: id => api.get(`/categories/${id}`),\n  create: category => api.post('/categories', category),\n  update: (id, category) => api.put(`/categories/${id}`, category),\n  delete: id => api.delete(`/categories/${id}`)\n};\n\n// Orders API\nexport const ordersApi = {\n  getAll: status => {\n    const params = status ? `?status=${status}` : '';\n    return api.get(`/orders${params}`);\n  },\n  getById: id => api.get(`/orders/${id}`),\n  getByOrderNumber: orderNumber => api.get(`/orders/by-number/${orderNumber}`),\n  create: order => api.post('/orders', order),\n  update: (id, order) => api.put(`/orders/${id}`, order),\n  delete: id => api.delete(`/orders/${id}`)\n};\n\n// Authentication API\nexport const authApi = {\n  login: request => api.post('/auth/login', request),\n  register: request => api.post('/auth/register', request),\n  getUserInfo: () => api.get('/auth/me'),\n  changePassword: request => api.post('/auth/change-password', request),\n  logout: () => api.post('/auth/logout'),\n  checkAuth: () => api.get('/auth/check')\n};\nexport default api;","map":{"version":3,"names":["axios","API_BASE_URL","process","env","REACT_APP_API_URL","api","create","baseURL","headers","interceptors","request","use","config","_config$method","console","log","method","toUpperCase","url","error","Promise","reject","response","_error$response","_error$response2","data","message","status","localStorage","removeItem","window","location","href","_config$method2","token","getItem","Authorization","dressesApi","getAll","search","categoryId","params","URLSearchParams","append","toString","get","getById","id","getFeatured","dress","post","update","put","delete","categoriesApi","category","ordersApi","getByOrderNumber","orderNumber","order","authApi","login","register","getUserInfo","changePassword","logout","checkAuth"],"sources":["E:/Papi/Projects/CMS/frontend/src/services/api.ts"],"sourcesContent":["import axios from 'axios';\r\nimport { WeddingDress, Category, Order, LoginRequest, RegisterRequest, AuthResponse, User, ChangePasswordRequest } from '../types';\r\n\r\nconst API_BASE_URL = process.env.REACT_APP_API_URL || 'http://localhost:5000/api';\r\n\r\nconst api = axios.create({\r\n  baseURL: API_BASE_URL,\r\n  headers: {\r\n    'Content-Type': 'application/json',\r\n  },\r\n});\r\n\r\n// Request interceptor for logging\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Response interceptor for error handling\r\napi.interceptors.response.use(\r\n  (response) => {\r\n    return response;\r\n  },\r\n  (error) => {\r\n    console.error('API Error:', error.response?.data || error.message);\r\n    \r\n    // Handle authentication errors\r\n    if (error.response?.status === 401) {\r\n      // Remove token and redirect to login\r\n      localStorage.removeItem('token');\r\n      localStorage.removeItem('user');\r\n      window.location.href = '/login';\r\n    }\r\n    \r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Request interceptor to add auth token\r\napi.interceptors.request.use(\r\n  (config) => {\r\n    const token = localStorage.getItem('token');\r\n    if (token) {\r\n      config.headers.Authorization = `Bearer ${token}`;\r\n    }\r\n    console.log(`API Request: ${config.method?.toUpperCase()} ${config.url}`);\r\n    return config;\r\n  },\r\n  (error) => {\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\n// Wedding Dresses API\r\nexport const dressesApi = {\r\n  getAll: (search?: string, categoryId?: number) => {\r\n    const params = new URLSearchParams();\r\n    if (search) params.append('search', search);\r\n    if (categoryId) params.append('categoryId', categoryId.toString());\r\n    return api.get<WeddingDress[]>(`/dresses?${params.toString()}`);\r\n  },\r\n  getById: (id: number) => api.get<WeddingDress>(`/dresses/${id}`),\r\n  getFeatured: () => api.get<WeddingDress[]>('/dresses/featured'),\r\n  create: (dress: Partial<WeddingDress>) => api.post<WeddingDress>('/dresses', dress),\r\n  update: (id: number, dress: Partial<WeddingDress>) => api.put<WeddingDress>(`/dresses/${id}`, dress),\r\n  delete: (id: number) => api.delete(`/dresses/${id}`),\r\n};\r\n\r\n// Categories API\r\nexport const categoriesApi = {\r\n  getAll: () => api.get<Category[]>('/categories'),\r\n  getById: (id: number) => api.get<Category>(`/categories/${id}`),\r\n  create: (category: Partial<Category>) => api.post<Category>('/categories', category),\r\n  update: (id: number, category: Partial<Category>) => api.put<Category>(`/categories/${id}`, category),\r\n  delete: (id: number) => api.delete(`/categories/${id}`),\r\n};\r\n\r\n// Orders API\r\nexport const ordersApi = {\r\n  getAll: (status?: string) => {\r\n    const params = status ? `?status=${status}` : '';\r\n    return api.get<Order[]>(`/orders${params}`);\r\n  },\r\n  getById: (id: number) => api.get<Order>(`/orders/${id}`),\r\n  getByOrderNumber: (orderNumber: string) => api.get<Order>(`/orders/by-number/${orderNumber}`),\r\n  create: (order: Partial<Order>) => api.post<Order>('/orders', order),\r\n  update: (id: number, order: Partial<Order>) => api.put<Order>(`/orders/${id}`, order),\r\n  delete: (id: number) => api.delete(`/orders/${id}`),\r\n};\r\n\r\n// Authentication API\r\nexport const authApi = {\r\n  login: (request: LoginRequest) => api.post<AuthResponse>('/auth/login', request),\r\n  register: (request: RegisterRequest) => api.post<AuthResponse>('/auth/register', request),\r\n  getUserInfo: () => api.get<User>('/auth/me'),\r\n  changePassword: (request: ChangePasswordRequest) => api.post('/auth/change-password', request),\r\n  logout: () => api.post('/auth/logout'),\r\n  checkAuth: () => api.get('/auth/check'),\r\n};\r\n\r\nexport default api; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}